// main.jsx
import React from "react";
import ReactDOM from "react-dom/client";
import { HashRouter, Routes, Route, Navigate } from "react-router-dom";
import { AuthProvider, useAuth } from "./api/AuthContext.jsx";
import { LoginPage } from "./pages/Login.jsx";
import { SignupPage } from "./pages/Signup.jsx";
import OAuthCallbackGoogle from "./pages/OAuthCallbackGoogle.jsx";
import DashboardLayout from "./routes/DashboardLayout.jsx";
import DashboardHome from "./routes/pages/Home.jsx";
import DashboardAnalytics from "./routes/pages/Analytics.jsx";
import DashboardWorkouts from "./routes/pages/Workouts.jsx";
import DashboardNutrition from "./routes/pages/Nutrition.jsx";
import DashboardProfile from "./routes/pages/Profile.jsx";
import DashboardSettings from "./routes/pages/Settings.jsx";
import ResetPasswordPage from "./pages/ResetPasswordPage.jsx";
import OnboardingPage from "./routes/OnboardingLayout.jsx"; // ‚úÖ –î–æ–¥–∞–Ω–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É onboarding
// import Layout from "./Layout.jsx";
import "./index.css";

// üîê Component for protecting private routes
function PrivateRoute({ children }) {
  const { authToken, loading } = useAuth();

  console.log('PrivateRoute - authToken:', authToken);
  console.log('PrivateRoute - loading:', loading);

  if (loading) return <p>Loading‚Ä¶</p>;
  if (!authToken) {
    console.log('No authToken - redirecting to login');
    return <Navigate to="/login" replace />;
  }
  return children;
}

// üîê Component for onboarding redirect - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î –Ω–∞ onboarding —è–∫—â–æ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
function OnboardingRoute({ children }) {
  const { authToken, loading, user } = useAuth();

  if (loading) return <p>Loading‚Ä¶</p>;
  if (!authToken) return <Navigate to="/login" replace />;
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–≤–µ—Ä—à–∏–≤ onboarding
  // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∞–±–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
  const hasCompletedOnboarding = user?.onboarding_completed; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–µ –ø–æ–ª–µ
  
  if (!hasCompletedOnboarding) {
    return <Navigate to="/onboarding" replace />;
  }
  
  return children;
}

function AppRouter() {
  return (
    <HashRouter>
      <Routes>
        {/* Public pages */}
        <Route path="/login" element={<LoginPage />} />
        <Route path="/signup" element={<SignupPage open />} />
        <Route path="/reset-password" element={<ResetPasswordPage />} />

        {/* ‚úÖ Google OAuth callback route */}
        <Route path="/auth/callback/google" element={<OAuthCallbackGoogle />} />
        <Route path="/auth/success" element={<OAuthCallbackGoogle />} />

        {/* üîê Onboarding page - –æ–±–æ–≤'—è–∑–∫–æ–≤–∞ –ø—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó */}
        <Route 
          path="/onboarding" 
          element={
            <PrivateRoute>
              <OnboardingPage />
            </PrivateRoute>
          } 
        />

        {/* Redirect root to onboarding –∞–±–æ dashboard */}
        <Route path="/" element={<Navigate to="/dashboard" replace />} />

        {/* üîê Protected Dashboard - —Ç–µ–ø–µ—Ä –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é onboarding */}
        <Route
          path="/dashboard"
          element={
            <OnboardingRoute>
              <DashboardLayout />
            </OnboardingRoute>
          }
        >
          <Route index element={<DashboardHome />} />
          <Route path="analytics" element={<DashboardAnalytics />} />
          <Route path="workouts" element={<DashboardWorkouts />} />
          <Route path="nutrition" element={<DashboardNutrition />} />
          <Route path="profile" element={<DashboardProfile />} />
          <Route path="settings" element={<DashboardSettings />} />
        </Route>

        {/* Catch-all redirect */}
        <Route path="*" element={<Navigate to="/dashboard" replace />} />
      </Routes>
    </HashRouter>
  );
}

// üîí Wrap entire app in AuthProvider
ReactDOM.createRoot(document.getElementById("root")).render(
  <AuthProvider>
    <AppRouter />
  </AuthProvider>
);