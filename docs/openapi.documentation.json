{
    "openapi": "3.0.0",
    "info": {
        "title": "anatomous_mvp",
        "description": "",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "https://xu6p-ejbd-2ew4.n7e.xano.io/api:5PA_dIPO"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {}
    },
    "paths": {
        "/allergies/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/allergies/{user_id}|DELETE",
                "summary": "Delete allergies record",
                "description": "Delete allergies record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "allergies"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/allergies/{user_id}|GET",
                "summary": "Get allergies record for user",
                "description": "Get allergies record for user\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "allergies"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "allergy_name": {
                                                        "type": "string",
                                                        "description": "Name of the allergy (e.g., Pollen)"
                                                    },
                                                    "severity": {
                                                        "type": "string",
                                                        "description": "Severity of the allergy (e.g., Mild, Severe)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the allergy (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/allergies/{user_id}|PATCH",
                "summary": "Update allergies record",
                "description": "Update allergies record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "allergies"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "allergies_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "allergy_name": {
                                        "type": "string",
                                        "description": "Name of the allergy (e.g., Pollen)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the allergy (e.g., Mild, Severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the allergy (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "allergies_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "allergy_name": {
                                        "type": "string",
                                        "description": "Name of the allergy (e.g., Pollen)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the allergy (e.g., Mild, Severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the allergy (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/allergies": {
            "post": {
                "operationId": "anatomous_mvp/allergies|POST",
                "summary": "Add allergies record",
                "description": "Add allergies record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "allergies"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": ""
                                        },
                                        "created_at": {
                                            "type": "number",
                                            "format": "timestamptz",
                                            "description": "",
                                            "default": "now"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Reference to the associated user"
                                        },
                                        "allergy_name": {
                                            "type": "string",
                                            "description": "Name of the allergy (e.g., Pollen)"
                                        },
                                        "severity": {
                                            "type": "string",
                                            "description": "Severity of the allergy (e.g., Mild, Severe)"
                                        },
                                        "notes": {
                                            "type": "string",
                                            "description": "Additional notes about the allergy (nullable)"
                                        },
                                        "last_updated": {
                                            "type": "number",
                                            "format": "timestamptz",
                                            "description": "Timestamp of the last update to the record"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "allergy_name": {
                                        "type": "string",
                                        "description": "Name of the allergy (e.g., Pollen)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the allergy (e.g., Mild, Severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the allergy (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "allergy_name": {
                                        "type": "string",
                                        "description": "Name of the allergy (e.g., Pollen)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the allergy (e.g., Mild, Severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the allergy (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/check-threshold": {
            "post": {
                "operationId": "anatomous_mvp/check-threshold|POST",
                "summary": "check the indicator, set an alert (if necessary), and tell the front what to do next.",
                "description": "check the indicator, set an alert (if necessary), and tell the front what to do next.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "check-threshold"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "user_id",
                                        "nullable": true
                                    },
                                    "metrics": {
                                        "type": "object",
                                        "description": "metrics ",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "user_id",
                                        "nullable": true
                                    },
                                    "metrics": {
                                        "type": "object",
                                        "description": "metrics ",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/check_query": {
            "post": {
                "operationId": "anatomous_mvp/check_query|POST",
                "summary": "Check input user",
                "description": "Check input user\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "check_query"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "query"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "query"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/comprehensive-alerts": {
            "post": {
                "operationId": "anatomous_mvp/comprehensive-alerts|POST",
                "summary": "Endpoint for updating complex alerts",
                "description": "Endpoint for updating complex alerts\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "comprehensive-alerts"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "metrics": {
                                        "type": "object",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "metrics"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "metrics": {
                                        "type": "object",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "metrics"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/family_history/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/family_history/{user_id}|DELETE",
                "summary": "Delete family_history record",
                "description": "Delete family_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "family_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/family_history/{user_id}|GET",
                "summary": "Get family_history record",
                "description": "Get family_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "family_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "family_member": {
                                                        "type": "string",
                                                        "description": "Type of family member (e.g., mother, father, sibling)"
                                                    },
                                                    "condition_name": {
                                                        "type": "string",
                                                        "description": "Name of the condition in the family member"
                                                    },
                                                    "age_at_diagnosis": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "Age of the family member at diagnosis (nullable)"
                                                    },
                                                    "relationship_notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the family relationship (nullable)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the condition (nullable)"
                                                    },
                                                    "is_genetic": {
                                                        "type": "boolean",
                                                        "description": "Indicates if the condition is genetic",
                                                        "default": "false"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/family_history/{user_id}|PATCH",
                "summary": "Update family_history record",
                "description": "Update family_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "family_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "family_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "family_member": {
                                        "type": "string",
                                        "description": "Type of family member (e.g., mother, father, sibling)"
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the condition in the family member"
                                    },
                                    "age_at_diagnosis": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Age of the family member at diagnosis (nullable)"
                                    },
                                    "relationship_notes": {
                                        "type": "string",
                                        "description": "Additional notes about the family relationship (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "is_genetic": {
                                        "type": "boolean",
                                        "description": "Indicates if the condition is genetic",
                                        "default": "false"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "family_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "family_member": {
                                        "type": "string",
                                        "description": "Type of family member (e.g., mother, father, sibling)"
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the condition in the family member"
                                    },
                                    "age_at_diagnosis": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Age of the family member at diagnosis (nullable)"
                                    },
                                    "relationship_notes": {
                                        "type": "string",
                                        "description": "Additional notes about the family relationship (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "is_genetic": {
                                        "type": "boolean",
                                        "description": "Indicates if the condition is genetic",
                                        "default": "false"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/family_history": {
            "post": {
                "operationId": "anatomous_mvp/family_history|POST",
                "summary": "Add family_history record",
                "description": "Add family_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "family_history"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "family_member": {
                                                    "type": "string",
                                                    "description": "Type of family member (e.g., mother, father, sibling)"
                                                },
                                                "condition_name": {
                                                    "type": "string",
                                                    "description": "Name of the condition in the family member"
                                                },
                                                "age_at_diagnosis": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Age of the family member at diagnosis (nullable)"
                                                },
                                                "relationship_notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the family relationship (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the condition (nullable)"
                                                },
                                                "is_genetic": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the condition is genetic",
                                                    "default": "false"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "family_member": {
                                        "type": "string",
                                        "description": "Type of family member (e.g., mother, father, sibling)"
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the condition in the family member"
                                    },
                                    "age_at_diagnosis": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Age of the family member at diagnosis (nullable)"
                                    },
                                    "relationship_notes": {
                                        "type": "string",
                                        "description": "Additional notes about the family relationship (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "is_genetic": {
                                        "type": "boolean",
                                        "description": "Indicates if the condition is genetic",
                                        "default": "false"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "family_member": {
                                        "type": "string",
                                        "description": "Type of family member (e.g., mother, father, sibling)"
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the condition in the family member"
                                    },
                                    "age_at_diagnosis": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Age of the family member at diagnosis (nullable)"
                                    },
                                    "relationship_notes": {
                                        "type": "string",
                                        "description": "Additional notes about the family relationship (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "is_genetic": {
                                        "type": "boolean",
                                        "description": "Indicates if the condition is genetic",
                                        "default": "false"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/generate-insight": {
            "post": {
                "operationId": "anatomous_mvp/generate-insight|POST",
                "summary": "Accept user request. Here, only the request is sent and the response is validated.",
                "description": "Accept user request. Here, only the request is sent and the response is validated.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "generate-insight"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "string",
                                        "description": "text request"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "user id",
                                        "nullable": true
                                    },
                                    "metrics": {
                                        "type": "object",
                                        "description": "metrics",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "query",
                                    "user_id",
                                    "metrics"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "string",
                                        "description": "text request"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "user id",
                                        "nullable": true
                                    },
                                    "metrics": {
                                        "type": "object",
                                        "description": "metrics",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "query",
                                    "user_id",
                                    "metrics"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/get-comprehensive-alerts": {
            "get": {
                "operationId": "anatomous_mvp/get-comprehensive-alerts|GET",
                "summary": "Get comprehensive alerts for user",
                "description": "Get comprehensive alerts for user\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "get-comprehensive-alerts"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the user associated with the AI alert"
                                                    },
                                                    "metric_name": {
                                                        "type": "string",
                                                        "description": "Specific name of the metric (e.g., Blood Pressure Systolic, Heart Rate)"
                                                    },
                                                    "metric_type": {
                                                        "type": "string",
                                                        "description": "Type of metric that triggered the AI alert"
                                                    },
                                                    "alert_type": {
                                                        "type": "string",
                                                        "description": "Type of alert (e.g., threshold, pattern)"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Text message of the AI alert"
                                                    },
                                                    "severity": {
                                                        "type": "string",
                                                        "description": "Severity level of the AI alert"
                                                    },
                                                    "triggered_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Date and time when the AI alert was triggered"
                                                    },
                                                    "resolved": {
                                                        "type": "boolean",
                                                        "description": "Indicates if the user has viewed/resolved the AI alert",
                                                        "default": "false"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of metric change or alert"
                                                    },
                                                    "stale_days": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "Number of days since the last metric update"
                                                    },
                                                    "last_value": {
                                                        "type": "string",
                                                        "description": "Last known value of the metric (can be text or decimal)"
                                                    },
                                                    "last_metric_date": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last metric update"
                                                    },
                                                    "alert_category": {
                                                        "type": "string",
                                                        "description": "Category of the alert (e.g., SOFT_REMINDER, COMPREHENSIVE, THRESHOLD)"
                                                    },
                                                    "stale_flag": {
                                                        "type": "boolean",
                                                        "description": "Flag indicating if the data is stale",
                                                        "default": "false"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/goal/progress{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/goal/progress{user_id}|DELETE",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goal"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "goal_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "goal_id"
                                ]
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/goal/progress{user_id}|GET",
                "summary": "Get progress for the period",
                "description": "Get progress for the period\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goal"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "goal_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "range",
                        "in": "query",
                        "description": "period",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "{\"average\" | \"total\"} mode - calculation mode",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/goal/progress": {
            "post": {
                "operationId": "anatomous_mvp/goal/progress|POST",
                "summary": "add a progress note",
                "description": "add a progress note\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goal"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "goal_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated goal"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of the progress update"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "description": "Numerical value of the progress"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the user associated with the goal progress"
                                                },
                                                "unit": {
                                                    "type": "string",
                                                    "description": "Unit of measurement for the progress value (e.g., km, hours, liters)"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Progress values ​​(e.g. 5km run, 8 hours of sleep, etc.)"
                                    },
                                    "unit": {
                                        "type": "string",
                                        "description": "for example, “km”, “hours”, “liters”);"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "goal_id",
                                    "value"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Progress values ​​(e.g. 5km run, 8 hours of sleep, etc.)"
                                    },
                                    "unit": {
                                        "type": "string",
                                        "description": "for example, “km”, “hours”, “liters”);"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "goal_id",
                                    "value"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/goals/get/history": {
            "get": {
                "operationId": "anatomous_mvp/goals/get/history|GET",
                "summary": "filter goals",
                "description": "filter goals\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goals"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "how to filter status = 'Completed' OR 'Archived'",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of the goal"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Detailed description of the goal"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "Current status of the goal",
                                                        "enum": [
                                                            "paused",
                                                            "completed",
                                                            "archived",
                                                            "on track"
                                                        ]
                                                    },
                                                    "target_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Target completion date for the goal (nullable)"
                                                    },
                                                    "visibility_scope": {
                                                        "type": "string",
                                                        "description": "Visibility scope of the goal",
                                                        "enum": [
                                                            "private",
                                                            "public"
                                                        ]
                                                    },
                                                    "updated_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the goal record"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/goals/readd": {
            "post": {
                "operationId": "anatomous_mvp/goals/readd|POST",
                "summary": "creates a new target, copying the old one (title, type, description, but new id and created_at)",
                "description": "creates a new target, copying the old one (title, type, description, but new id and created_at)\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goals"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Title of the goal"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Detailed description of the goal"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "Current status of the goal",
                                                    "enum": [
                                                        "paused",
                                                        "completed",
                                                        "archived",
                                                        "on track"
                                                    ]
                                                },
                                                "target_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Target completion date for the goal (nullable)"
                                                },
                                                "visibility_scope": {
                                                    "type": "string",
                                                    "description": "Visibility scope of the goal",
                                                    "enum": [
                                                        "private",
                                                        "public"
                                                    ]
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the goal record"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "goal_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "goal_id"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/goals/{goal_id}": {
            "patch": {
                "operationId": "anatomous_mvp/goals/{goal_id}|PATCH",
                "summary": "Update goals record",
                "description": "Update goals record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goals"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Title of the goal"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Detailed description of the goal"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "Current status of the goal",
                                                    "enum": [
                                                        "paused",
                                                        "completed",
                                                        "archived",
                                                        "on track"
                                                    ]
                                                },
                                                "target_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Target completion date for the goal (nullable)"
                                                },
                                                "visibility_scope": {
                                                    "type": "string",
                                                    "description": "Visibility scope of the goal",
                                                    "enum": [
                                                        "private",
                                                        "public"
                                                    ]
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the goal record"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "goals_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Title of the goal"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Detailed description of the goal"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Current status of the goal",
                                        "enum": [
                                            "paused",
                                            "completed",
                                            "archived",
                                            "on track"
                                        ]
                                    },
                                    "target_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Target completion date for the goal (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the goal",
                                        "enum": [
                                            "private",
                                            "public"
                                        ]
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the goal record"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "goals_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Title of the goal"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Detailed description of the goal"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Current status of the goal",
                                        "enum": [
                                            "paused",
                                            "completed",
                                            "archived",
                                            "on track"
                                        ]
                                    },
                                    "target_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Target completion date for the goal (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the goal",
                                        "enum": [
                                            "private",
                                            "public"
                                        ]
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the goal record"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/goals/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/goals/{user_id}|DELETE",
                "summary": "Delete goals record.",
                "description": "Delete goals record.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goals"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "goal_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/goals/{user_id}|GET",
                "summary": "Query all goals records for user",
                "description": "Query all goals records for user\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goals"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/goals": {
            "post": {
                "operationId": "anatomous_mvp/goals|POST",
                "summary": "Add goals record",
                "description": "Add goals record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "goals"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Title of the goal"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Detailed description of the goal"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "Current status of the goal",
                                                    "enum": [
                                                        "paused",
                                                        "completed",
                                                        "archived",
                                                        "on track"
                                                    ]
                                                },
                                                "target_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Target completion date for the goal (nullable)"
                                                },
                                                "visibility_scope": {
                                                    "type": "string",
                                                    "description": "Visibility scope of the goal",
                                                    "enum": [
                                                        "private",
                                                        "public"
                                                    ]
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the goal record"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Title of the goal"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Detailed description of the goal"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Current status of the goal",
                                        "enum": [
                                            "paused",
                                            "completed",
                                            "archived",
                                            "on track"
                                        ]
                                    },
                                    "target_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Target completion date for the goal (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the goal",
                                        "enum": [
                                            "private",
                                            "public"
                                        ]
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the goal record"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Title of the goal"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Detailed description of the goal"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Current status of the goal",
                                        "enum": [
                                            "paused",
                                            "completed",
                                            "archived",
                                            "on track"
                                        ]
                                    },
                                    "target_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Target completion date for the goal (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the goal",
                                        "enum": [
                                            "private",
                                            "public"
                                        ]
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the goal record"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of the goal (e.g., fitness, nutrition, wellness)"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health_data/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/health_data/{user_id}|DELETE",
                "summary": "Delete health_data record.",
                "description": "Delete health_data record.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_data"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/health_data/{user_id}|GET",
                "summary": "Get health_data record for user",
                "description": "Get health_data record for user\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_data"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Date of health data recording"
                                                    },
                                                    "heart_rate": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's heart rate (nullable)"
                                                    },
                                                    "blood_pressure_systolic": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's systolic blood pressure (nullable)"
                                                    },
                                                    "blood_pressure_diastolic": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's diastolic blood pressure (nullable)"
                                                    },
                                                    "weekly_activity_minutes": {
                                                        "type": "number",
                                                        "description": "Number of sleep hours (nullable)"
                                                    },
                                                    "activity_level": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's activity level (nullable)"
                                                    },
                                                    "visibility_scope": {
                                                        "type": "string",
                                                        "description": "Visibility scope of the health data",
                                                        "enum": [
                                                            "private",
                                                            "family",
                                                            "coach",
                                                            "public"
                                                        ]
                                                    },
                                                    "hydration_liters": {
                                                        "type": "number",
                                                        "description": "User's daily hydration intake in liters (nullable)"
                                                    },
                                                    "pulse_oximetry": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's blood oxygen saturation (nullable)"
                                                    },
                                                    "respiratory_rate": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's respiratory rate (breaths per minute, nullable)"
                                                    },
                                                    "body_weight_trend": {
                                                        "type": "string",
                                                        "description": "User's body weight trend (nullable)"
                                                    },
                                                    "body_mass_index": {
                                                        "type": "number",
                                                        "description": "User's Body Mass Index (BMI, nullable)"
                                                    },
                                                    "fasting_glucose": {
                                                        "type": "number",
                                                        "description": "User's fasting glucose level (nullable)"
                                                    },
                                                    "body_temperature": {
                                                        "type": "number",
                                                        "description": "User's body temperature (nullable)"
                                                    }
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/health_data/{user_id}|PATCH",
                "summary": "Edit health_data record",
                "description": "Edit health_data record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_data"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of health data recording"
                                                },
                                                "heart_rate": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's heart rate (nullable)"
                                                },
                                                "blood_pressure_systolic": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's systolic blood pressure (nullable)"
                                                },
                                                "blood_pressure_diastolic": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's diastolic blood pressure (nullable)"
                                                },
                                                "weekly_activity_minutes": {
                                                    "type": "number",
                                                    "description": "Number of sleep hours (nullable)"
                                                },
                                                "activity_level": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's activity level (nullable)"
                                                },
                                                "visibility_scope": {
                                                    "type": "string",
                                                    "description": "Visibility scope of the health data",
                                                    "enum": [
                                                        "private",
                                                        "family",
                                                        "coach",
                                                        "public"
                                                    ]
                                                },
                                                "hydration_liters": {
                                                    "type": "number",
                                                    "description": "User's daily hydration intake in liters (nullable)"
                                                },
                                                "pulse_oximetry": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's blood oxygen saturation (nullable)"
                                                },
                                                "respiratory_rate": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's respiratory rate (breaths per minute, nullable)"
                                                },
                                                "body_weight_trend": {
                                                    "type": "string",
                                                    "description": "User's body weight trend (nullable)"
                                                },
                                                "body_mass_index": {
                                                    "type": "number",
                                                    "description": "User's Body Mass Index (BMI, nullable)"
                                                },
                                                "fasting_glucose": {
                                                    "type": "number",
                                                    "description": "User's fasting glucose level (nullable)"
                                                },
                                                "body_temperature": {
                                                    "type": "number",
                                                    "description": "User's body temperature (nullable)"
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "health_data_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of health data recording"
                                    },
                                    "heart_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's heart rate (nullable)"
                                    },
                                    "blood_pressure_systolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's systolic blood pressure (nullable)"
                                    },
                                    "blood_pressure_diastolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's diastolic blood pressure (nullable)"
                                    },
                                    "weekly_activity_minutes": {
                                        "type": "number",
                                        "description": "Number of sleep hours (nullable)"
                                    },
                                    "activity_level": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's activity level (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the health data",
                                        "enum": [
                                            "private",
                                            "family",
                                            "coach",
                                            "public"
                                        ]
                                    },
                                    "hydration_liters": {
                                        "type": "number",
                                        "description": "User's daily hydration intake in liters (nullable)"
                                    },
                                    "pulse_oximetry": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's blood oxygen saturation (nullable)"
                                    },
                                    "respiratory_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's respiratory rate (breaths per minute, nullable)"
                                    },
                                    "body_weight_trend": {
                                        "type": "string",
                                        "description": "User's body weight trend (nullable)"
                                    },
                                    "body_mass_index": {
                                        "type": "number",
                                        "description": "User's Body Mass Index (BMI, nullable)"
                                    },
                                    "fasting_glucose": {
                                        "type": "number",
                                        "description": "User's fasting glucose level (nullable)"
                                    },
                                    "body_temperature": {
                                        "type": "number",
                                        "description": "User's body temperature (nullable)"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "health_data_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of health data recording"
                                    },
                                    "heart_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's heart rate (nullable)"
                                    },
                                    "blood_pressure_systolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's systolic blood pressure (nullable)"
                                    },
                                    "blood_pressure_diastolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's diastolic blood pressure (nullable)"
                                    },
                                    "weekly_activity_minutes": {
                                        "type": "number",
                                        "description": "Number of sleep hours (nullable)"
                                    },
                                    "activity_level": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's activity level (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the health data",
                                        "enum": [
                                            "private",
                                            "family",
                                            "coach",
                                            "public"
                                        ]
                                    },
                                    "hydration_liters": {
                                        "type": "number",
                                        "description": "User's daily hydration intake in liters (nullable)"
                                    },
                                    "pulse_oximetry": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's blood oxygen saturation (nullable)"
                                    },
                                    "respiratory_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's respiratory rate (breaths per minute, nullable)"
                                    },
                                    "body_weight_trend": {
                                        "type": "string",
                                        "description": "User's body weight trend (nullable)"
                                    },
                                    "body_mass_index": {
                                        "type": "number",
                                        "description": "User's Body Mass Index (BMI, nullable)"
                                    },
                                    "fasting_glucose": {
                                        "type": "number",
                                        "description": "User's fasting glucose level (nullable)"
                                    },
                                    "body_temperature": {
                                        "type": "number",
                                        "description": "User's body temperature (nullable)"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health_data": {
            "post": {
                "operationId": "anatomous_mvp/health_data|POST",
                "summary": "Add health_data record",
                "description": "Add health_data record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_data"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": ""
                                        },
                                        "created_at": {
                                            "type": "number",
                                            "format": "timestamptz",
                                            "description": "",
                                            "default": "now"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Reference to the associated user"
                                        },
                                        "date": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Date of health data recording"
                                        },
                                        "heart_rate": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's heart rate (nullable)"
                                        },
                                        "blood_pressure_systolic": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's systolic blood pressure (nullable)"
                                        },
                                        "blood_pressure_diastolic": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's diastolic blood pressure (nullable)"
                                        },
                                        "weekly_activity_minutes": {
                                            "type": "number",
                                            "description": "Number of sleep hours (nullable)"
                                        },
                                        "activity_level": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's activity level (nullable)"
                                        },
                                        "visibility_scope": {
                                            "type": "string",
                                            "description": "Visibility scope of the health data",
                                            "enum": [
                                                "private",
                                                "family",
                                                "coach",
                                                "public"
                                            ]
                                        },
                                        "hydration_liters": {
                                            "type": "number",
                                            "description": "User's daily hydration intake in liters (nullable)"
                                        },
                                        "pulse_oximetry": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's blood oxygen saturation (nullable)"
                                        },
                                        "respiratory_rate": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's respiratory rate (breaths per minute, nullable)"
                                        },
                                        "body_weight_trend": {
                                            "type": "string",
                                            "description": "User's body weight trend (nullable)"
                                        },
                                        "body_mass_index": {
                                            "type": "number",
                                            "description": "User's Body Mass Index (BMI, nullable)"
                                        },
                                        "fasting_glucose": {
                                            "type": "number",
                                            "description": "User's fasting glucose level (nullable)"
                                        },
                                        "body_temperature": {
                                            "type": "number",
                                            "description": "User's body temperature (nullable)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of health data recording"
                                    },
                                    "heart_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's heart rate (nullable)"
                                    },
                                    "blood_pressure_systolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's systolic blood pressure (nullable)"
                                    },
                                    "blood_pressure_diastolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's diastolic blood pressure (nullable)"
                                    },
                                    "weekly_activity_minutes": {
                                        "type": "number",
                                        "description": "Number of sleep hours (nullable)"
                                    },
                                    "activity_level": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's activity level (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the health data",
                                        "enum": [
                                            "private",
                                            "family",
                                            "coach",
                                            "public"
                                        ]
                                    },
                                    "hydration_liters": {
                                        "type": "number",
                                        "description": "User's daily hydration intake in liters (nullable)"
                                    },
                                    "pulse_oximetry": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's blood oxygen saturation (nullable)"
                                    },
                                    "respiratory_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's respiratory rate (breaths per minute, nullable)"
                                    },
                                    "body_weight_trend": {
                                        "type": "string",
                                        "description": "User's body weight trend (nullable)"
                                    },
                                    "body_mass_index": {
                                        "type": "number",
                                        "description": "User's Body Mass Index (BMI, nullable)"
                                    },
                                    "fasting_glucose": {
                                        "type": "number",
                                        "description": "User's fasting glucose level (nullable)"
                                    },
                                    "body_temperature": {
                                        "type": "number",
                                        "description": "User's body temperature (nullable)"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of health data recording"
                                    },
                                    "heart_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's heart rate (nullable)"
                                    },
                                    "blood_pressure_systolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's systolic blood pressure (nullable)"
                                    },
                                    "blood_pressure_diastolic": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's diastolic blood pressure (nullable)"
                                    },
                                    "weekly_activity_minutes": {
                                        "type": "number",
                                        "description": "Number of sleep hours (nullable)"
                                    },
                                    "activity_level": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's activity level (nullable)"
                                    },
                                    "visibility_scope": {
                                        "type": "string",
                                        "description": "Visibility scope of the health data",
                                        "enum": [
                                            "private",
                                            "family",
                                            "coach",
                                            "public"
                                        ]
                                    },
                                    "hydration_liters": {
                                        "type": "number",
                                        "description": "User's daily hydration intake in liters (nullable)"
                                    },
                                    "pulse_oximetry": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's blood oxygen saturation (nullable)"
                                    },
                                    "respiratory_rate": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's respiratory rate (breaths per minute, nullable)"
                                    },
                                    "body_weight_trend": {
                                        "type": "string",
                                        "description": "User's body weight trend (nullable)"
                                    },
                                    "body_mass_index": {
                                        "type": "number",
                                        "description": "User's Body Mass Index (BMI, nullable)"
                                    },
                                    "fasting_glucose": {
                                        "type": "number",
                                        "description": "User's fasting glucose level (nullable)"
                                    },
                                    "body_temperature": {
                                        "type": "number",
                                        "description": "User's body temperature (nullable)"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health_history/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/health_history/{user_id}|DELETE",
                "summary": "Delete health_history record",
                "description": "Delete health_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/health_history/{user_id}|GET",
                "summary": "Get health_history record",
                "description": "Get health_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "description": "Category of the health record (e.g., Medical Conditions, Allergies)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    },
                                                    "record_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "ID of the record in the corresponding health-related table"
                                                    },
                                                    "entry_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Date of the health record entry"
                                                    },
                                                    "importance": {
                                                        "type": "string",
                                                        "description": "Importance level of the health record",
                                                        "enum": [
                                                            "low",
                                                            "medium",
                                                            "high"
                                                        ]
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "General notes about the health record"
                                                    }
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/health_history/{user_id}|PATCH",
                "summary": "Update health_history record",
                "description": "Update health_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "family_member": {
                                                    "type": "string",
                                                    "description": "Type of family member (e.g., mother, father, sibling)"
                                                },
                                                "condition_name": {
                                                    "type": "string",
                                                    "description": "Name of the condition in the family member"
                                                },
                                                "age_at_diagnosis": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Age of the family member at diagnosis (nullable)"
                                                },
                                                "relationship_notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the family relationship (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the condition (nullable)"
                                                },
                                                "is_genetic": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the condition is genetic",
                                                    "default": "false"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "health_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Category of the health record (e.g., Medical Conditions, Allergies)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    },
                                    "record_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "ID of the record in the corresponding health-related table"
                                    },
                                    "entry_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the health record entry"
                                    },
                                    "importance": {
                                        "type": "string",
                                        "description": "Importance level of the health record",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "General notes about the health record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "health_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Category of the health record (e.g., Medical Conditions, Allergies)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    },
                                    "record_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "ID of the record in the corresponding health-related table"
                                    },
                                    "entry_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the health record entry"
                                    },
                                    "importance": {
                                        "type": "string",
                                        "description": "Importance level of the health record",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "General notes about the health record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health_history_summary": {
            "post": {
                "operationId": "anatomous_mvp/health_history_summary|POST",
                "summary": "All user records from all health history tables",
                "description": "All user records from all health history tables\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_history_summary"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user_medical_condition": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "condition_name": {
                                                    "type": "string",
                                                    "description": "Name of the medical condition (e.g., Hypertension)"
                                                },
                                                "diagnosis_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of diagnosis"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "Status of the condition",
                                                    "enum": [
                                                        "active",
                                                        "resolved",
                                                        "chronic"
                                                    ]
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "description": "Severity of the condition",
                                                    "enum": [
                                                        "mild",
                                                        "moderate",
                                                        "severe"
                                                    ]
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the condition (nullable)"
                                                },
                                                "treatment_plan": {
                                                    "type": "string",
                                                    "description": "Treatment plan for the condition (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "user_allergies": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "allergy_name": {
                                                    "type": "string",
                                                    "description": "Name of the allergy (e.g., Pollen)"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "description": "Severity of the allergy (e.g., Mild, Severe)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the allergy (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "user_family_history": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "family_member": {
                                                    "type": "string",
                                                    "description": "Type of family member (e.g., mother, father, sibling)"
                                                },
                                                "condition_name": {
                                                    "type": "string",
                                                    "description": "Name of the condition in the family member"
                                                },
                                                "age_at_diagnosis": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Age of the family member at diagnosis (nullable)"
                                                },
                                                "relationship_notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the family relationship (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the condition (nullable)"
                                                },
                                                "is_genetic": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the condition is genetic",
                                                    "default": "false"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "user_medications": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the medication"
                                                },
                                                "dosage": {
                                                    "type": "string",
                                                    "description": "Dosage of the medication"
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "description": "Frequency of medication intake"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Start date of medication intake"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "End date of medication intake (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "user_sensitivities": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "sensitivity_name": {
                                                    "type": "string",
                                                    "description": "Name of the sensitivity"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                                },
                                                "triggers": {
                                                    "type": "string",
                                                    "description": "Triggers for the sensitivity (nullable)"
                                                },
                                                "symptoms": {
                                                    "type": "string",
                                                    "description": "Symptoms experienced (nullable)"
                                                },
                                                "management": {
                                                    "type": "string",
                                                    "description": "Management strategies (nullable)"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the sensitivity (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "user_surgical_history": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "procedure_name": {
                                                    "type": "string",
                                                    "description": "Name of the surgical procedure"
                                                },
                                                "surgery_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of the surgery"
                                                },
                                                "surgeon": {
                                                    "type": "string",
                                                    "description": "Name of the surgeon (nullable)"
                                                },
                                                "hospital": {
                                                    "type": "string",
                                                    "description": "Hospital or clinic where the surgery was performed (nullable)"
                                                },
                                                "reason": {
                                                    "type": "string",
                                                    "description": "Reason for the surgery (nullable)"
                                                },
                                                "outcome": {
                                                    "type": "string",
                                                    "description": "Outcome of the surgery (nullable)"
                                                },
                                                "complications": {
                                                    "type": "string",
                                                    "description": "Complications experienced (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the surgery (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "user_vaccinations": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "vaccine_name": {
                                                    "type": "string",
                                                    "description": "Name of the vaccine"
                                                },
                                                "vaccination_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of vaccination"
                                                },
                                                "lot_number": {
                                                    "type": "string",
                                                    "description": "Lot number of the vaccine (nullable)"
                                                },
                                                "administrator": {
                                                    "type": "string",
                                                    "description": "Administrator of the vaccine (nullable)"
                                                },
                                                "next_due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Next due date for vaccination (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the vaccination (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/health_history": {
            "post": {
                "operationId": "anatomous_mvp/health_history|POST",
                "summary": "Add health_history record",
                "description": "Add health_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "health_history"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "description": "Category of the health record (e.g., Medical Conditions, Allergies)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                },
                                                "record_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "ID of the record in the corresponding health-related table"
                                                },
                                                "entry_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of the health record entry"
                                                },
                                                "importance": {
                                                    "type": "string",
                                                    "description": "Importance level of the health record",
                                                    "enum": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ]
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "General notes about the health record"
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Category of the health record (e.g., Medical Conditions, Allergies)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    },
                                    "record_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "ID of the record in the corresponding health-related table"
                                    },
                                    "entry_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the health record entry"
                                    },
                                    "importance": {
                                        "type": "string",
                                        "description": "Importance level of the health record",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "General notes about the health record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Category of the health record (e.g., Medical Conditions, Allergies)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    },
                                    "record_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "ID of the record in the corresponding health-related table"
                                    },
                                    "entry_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the health record entry"
                                    },
                                    "importance": {
                                        "type": "string",
                                        "description": "Importance level of the health record",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "General notes about the health record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/insights_recent": {
            "get": {
                "operationId": "anatomous_mvp/insights_recent|GET",
                "summary": "Get the latest AI Insight for the selected metric",
                "description": "Get the latest AI Insight for the selected metric\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "insights_recent"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "type_metric",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/medical_conditions/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/medical_conditions/{user_id}|DELETE",
                "summary": "Delete medical_conditions record",
                "description": "Delete medical_conditions record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medical_conditions"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/medical_conditions/{user_id}|GET",
                "summary": "Get medical_conditions record",
                "description": "Get medical_conditions record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medical_conditions"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/medical_conditions/{user_id}|PATCH",
                "summary": "Edit medical_conditions record",
                "description": "Edit medical_conditions record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medical_conditions"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "condition_name": {
                                                    "type": "string",
                                                    "description": "Name of the medical condition (e.g., Hypertension)"
                                                },
                                                "diagnosis_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of diagnosis"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "Status of the condition",
                                                    "enum": [
                                                        "active",
                                                        "resolved",
                                                        "chronic"
                                                    ]
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "description": "Severity of the condition",
                                                    "enum": [
                                                        "mild",
                                                        "moderate",
                                                        "severe"
                                                    ]
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the condition (nullable)"
                                                },
                                                "treatment_plan": {
                                                    "type": "string",
                                                    "description": "Treatment plan for the condition (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "medical_conditions_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the medical condition (e.g., Hypertension)"
                                    },
                                    "diagnosis_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of diagnosis"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the condition",
                                        "enum": [
                                            "active",
                                            "resolved",
                                            "chronic"
                                        ]
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the condition",
                                        "enum": [
                                            "mild",
                                            "moderate",
                                            "severe"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "treatment_plan": {
                                        "type": "string",
                                        "description": "Treatment plan for the condition (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "medical_conditions_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the medical condition (e.g., Hypertension)"
                                    },
                                    "diagnosis_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of diagnosis"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the condition",
                                        "enum": [
                                            "active",
                                            "resolved",
                                            "chronic"
                                        ]
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the condition",
                                        "enum": [
                                            "mild",
                                            "moderate",
                                            "severe"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "treatment_plan": {
                                        "type": "string",
                                        "description": "Treatment plan for the condition (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/medical_conditions": {
            "get": {
                "operationId": "anatomous_mvp/medical_conditions|GET",
                "summary": "Query all medical_conditions records",
                "description": "Query all medical_conditions records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medical_conditions"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": ""
                                            },
                                            "created_at": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "",
                                                "default": "now"
                                            },
                                            "user_id": {
                                                "type": "string",
                                                "format": "uuid",
                                                "description": "Reference to the associated user"
                                            },
                                            "condition_name": {
                                                "type": "string",
                                                "description": "Name of the medical condition (e.g., Hypertension)"
                                            },
                                            "diagnosis_date": {
                                                "type": "string",
                                                "format": "date",
                                                "description": "Date of diagnosis"
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the condition",
                                                "enum": [
                                                    "active",
                                                    "resolved",
                                                    "chronic"
                                                ]
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Severity of the condition",
                                                "enum": [
                                                    "mild",
                                                    "moderate",
                                                    "severe"
                                                ]
                                            },
                                            "notes": {
                                                "type": "string",
                                                "description": "Additional notes about the condition (nullable)"
                                            },
                                            "treatment_plan": {
                                                "type": "string",
                                                "description": "Treatment plan for the condition (nullable)"
                                            },
                                            "last_updated": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "Timestamp of the last update to the record"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/medical_conditions|POST",
                "summary": "Add medical_conditions record",
                "description": "Add medical_conditions record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medical_conditions"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": ""
                                        },
                                        "created_at": {
                                            "type": "number",
                                            "format": "timestamptz",
                                            "description": "",
                                            "default": "now"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Reference to the associated user"
                                        },
                                        "condition_name": {
                                            "type": "string",
                                            "description": "Name of the medical condition (e.g., Hypertension)"
                                        },
                                        "diagnosis_date": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Date of diagnosis"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Status of the condition",
                                            "enum": [
                                                "active",
                                                "resolved",
                                                "chronic"
                                            ]
                                        },
                                        "severity": {
                                            "type": "string",
                                            "description": "Severity of the condition",
                                            "enum": [
                                                "mild",
                                                "moderate",
                                                "severe"
                                            ]
                                        },
                                        "notes": {
                                            "type": "string",
                                            "description": "Additional notes about the condition (nullable)"
                                        },
                                        "treatment_plan": {
                                            "type": "string",
                                            "description": "Treatment plan for the condition (nullable)"
                                        },
                                        "last_updated": {
                                            "type": "number",
                                            "format": "timestamptz",
                                            "description": "Timestamp of the last update to the record"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the medical condition (e.g., Hypertension)"
                                    },
                                    "diagnosis_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of diagnosis"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the condition",
                                        "enum": [
                                            "active",
                                            "resolved",
                                            "chronic"
                                        ]
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the condition",
                                        "enum": [
                                            "mild",
                                            "moderate",
                                            "severe"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "treatment_plan": {
                                        "type": "string",
                                        "description": "Treatment plan for the condition (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "condition_name": {
                                        "type": "string",
                                        "description": "Name of the medical condition (e.g., Hypertension)"
                                    },
                                    "diagnosis_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of diagnosis"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the condition",
                                        "enum": [
                                            "active",
                                            "resolved",
                                            "chronic"
                                        ]
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the condition",
                                        "enum": [
                                            "mild",
                                            "moderate",
                                            "severe"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the condition (nullable)"
                                    },
                                    "treatment_plan": {
                                        "type": "string",
                                        "description": "Treatment plan for the condition (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/medications/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/medications/{user_id}|DELETE",
                "summary": "Delete medications record",
                "description": "Delete medications record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medications"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/medications/{user_id}|GET",
                "summary": "Get medications record",
                "description": "Get medications record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medications"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the medication"
                                                    },
                                                    "dosage": {
                                                        "type": "string",
                                                        "description": "Dosage of the medication"
                                                    },
                                                    "frequency": {
                                                        "type": "string",
                                                        "description": "Frequency of medication intake"
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Start date of medication intake"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "End date of medication intake (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/medications/{user_id}|PATCH",
                "summary": "Edit medications record",
                "description": "Edit medications record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medications"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the medication"
                                                },
                                                "dosage": {
                                                    "type": "string",
                                                    "description": "Dosage of the medication"
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "description": "Frequency of medication intake"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Start date of medication intake"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "End date of medication intake (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "medications_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the medication"
                                    },
                                    "dosage": {
                                        "type": "string",
                                        "description": "Dosage of the medication"
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "description": "Frequency of medication intake"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Start date of medication intake"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "End date of medication intake (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "medications_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the medication"
                                    },
                                    "dosage": {
                                        "type": "string",
                                        "description": "Dosage of the medication"
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "description": "Frequency of medication intake"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Start date of medication intake"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "End date of medication intake (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/medications": {
            "get": {
                "operationId": "anatomous_mvp/medications|GET",
                "summary": "Query all medications records",
                "description": "Query all medications records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medications"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": ""
                                            },
                                            "created_at": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "",
                                                "default": "now"
                                            },
                                            "user_id": {
                                                "type": "string",
                                                "format": "uuid",
                                                "description": "Reference to the associated user"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the medication"
                                            },
                                            "dosage": {
                                                "type": "string",
                                                "description": "Dosage of the medication"
                                            },
                                            "frequency": {
                                                "type": "string",
                                                "description": "Frequency of medication intake"
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date",
                                                "description": "Start date of medication intake"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date",
                                                "description": "End date of medication intake (nullable)"
                                            },
                                            "last_updated": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "Timestamp of the last update to the record"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/medications|POST",
                "summary": "Add medications record",
                "description": "Add medications record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "medications"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the medication"
                                                },
                                                "dosage": {
                                                    "type": "string",
                                                    "description": "Dosage of the medication"
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "description": "Frequency of medication intake"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Start date of medication intake"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "End date of medication intake (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the medication"
                                    },
                                    "dosage": {
                                        "type": "string",
                                        "description": "Dosage of the medication"
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "description": "Frequency of medication intake"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Start date of medication intake"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "End date of medication intake (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the medication"
                                    },
                                    "dosage": {
                                        "type": "string",
                                        "description": "Dosage of the medication"
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "description": "Frequency of medication intake"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Start date of medication intake"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "End date of medication intake (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/forecast": {
            "post": {
                "operationId": "anatomous_mvp/metrics/forecast|POST",
                "summary": "This is an analytics API endpoint that predicts how a specific health indicator (metric) will change in the coming days based on the user's historical data.",
                "description": "This is an analytics API endpoint that predicts how a specific health indicator (metric) will change in the coming days based on the user's historical data.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E required",
                "tags": [
                    "metrics"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "succes": {
                                            "type": "string"
                                        },
                                        "result_message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type_metric": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "type_metric"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type_metric": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "type_metric"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/metrics/trends": {
            "post": {
                "operationId": "anatomous_mvp/metrics/trends|POST",
                "summary": "endpoint for getting history values",
                "description": "endpoint for getting history values\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "metrics"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "succes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type_metric": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "period": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "type_metric",
                                    "period",
                                    "start_date",
                                    "end_date"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type_metric": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "period": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "type_metric",
                                    "period",
                                    "start_date",
                                    "end_date"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/notes/note{note_id}": {
            "delete": {
                "operationId": "anatomous_mvp/notes/note{note_id}|DELETE",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "notes"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        }
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/notes/note{note_id}|PATCH",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "notes"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the user who created the note"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "description": "Content of the note or journal entry"
                                                },
                                                "mood_tag": {
                                                    "type": "string",
                                                    "description": "Tag describing the mood or sentiment of the note (nullable)"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "mood_tag": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "mood_tag": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/notes/note{user_id}": {
            "get": {
                "operationId": "anatomous_mvp/notes/note{user_id}|GET",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "notes"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "note_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the user who created the note"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "description": "Content of the note or journal entry"
                                                },
                                                "mood_tag": {
                                                    "type": "string",
                                                    "description": "Tag describing the mood or sentiment of the note (nullable)"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/notes": {
            "get": {
                "operationId": "anatomous_mvp/notes|GET",
                "summary": "Filter notes",
                "description": "Filter notes\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "notes"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "mood_tag",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the user who created the note"
                                                    },
                                                    "text": {
                                                        "type": "string",
                                                        "description": "Content of the note or journal entry"
                                                    },
                                                    "mood_tag": {
                                                        "type": "string",
                                                        "description": "Tag describing the mood or sentiment of the note (nullable)"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/notes|POST",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "notes"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the user who created the note"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "description": "Content of the note or journal entry"
                                                },
                                                "mood_tag": {
                                                    "type": "string",
                                                    "description": "Tag describing the mood or sentiment of the note (nullable)"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "mood_tag": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "text"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "mood_tag": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "text"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/onboarding/{step}": {
            "post": {
                "operationId": "anatomous_mvp/onboarding/{step}|POST",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "onboarding"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "step",
                        "in": "path",
                        "description": "Step onbording",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data_json": {
                                        "type": "object",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data_json": {
                                        "type": "object",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profiles/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/profiles/{user_id}|DELETE",
                "summary": "Delete profiles record.",
                "description": "Delete profiles record.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "profiles"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/profiles/{user_id}|GET",
                "summary": "Get profiles record",
                "description": "Get profiles record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "profiles"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": ""
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "User's first name",
                                                    "nullable": true,
                                                    "default": "Null"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "description": "User's last name",
                                                    "nullable": true,
                                                    "default": "Null"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "User's date of birth",
                                                    "nullable": true
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "description": "User's gender",
                                                    "enum": [
                                                        "male",
                                                        "female",
                                                        "other"
                                                    ]
                                                },
                                                "height_cm": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's height in centimeters"
                                                },
                                                "weight_kg": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's weight in kilograms"
                                                },
                                                "zip_code": {
                                                    "type": "string",
                                                    "description": "User's zip code (nullable)"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "description": "User's phone number (nullable)",
                                                    "nullable": true,
                                                    "default": "Null"
                                                },
                                                "sex_of_birth": {
                                                    "type": "string",
                                                    "description": "User's biological sex at birth (nullable)"
                                                },
                                                "profile_photo": {
                                                    "type": "object",
                                                    "properties": {
                                                        "access": {
                                                            "type": "string",
                                                            "description": "",
                                                            "enum": [
                                                                "public",
                                                                "private"
                                                            ],
                                                            "default": "public"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "size": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "description": ""
                                                        },
                                                        "mime": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "meta": {
                                                            "type": "object",
                                                            "description": ""
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "",
                                                            "nullable": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/profiles/{user_id}|PATCH",
                "summary": "Edit profiles record",
                "description": "Edit profiles record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "profiles"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": ""
                                        },
                                        "created_at": {
                                            "type": "number",
                                            "format": "timestamptz",
                                            "description": ""
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Reference to the associated user"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "description": "User's first name",
                                            "nullable": true,
                                            "default": "Null"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "description": "User's last name",
                                            "nullable": true,
                                            "default": "Null"
                                        },
                                        "dob": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "User's date of birth",
                                            "nullable": true
                                        },
                                        "gender": {
                                            "type": "string",
                                            "description": "User's gender",
                                            "enum": [
                                                "male",
                                                "female",
                                                "other"
                                            ]
                                        },
                                        "height_cm": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's height in centimeters"
                                        },
                                        "weight_kg": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "User's weight in kilograms"
                                        },
                                        "zip_code": {
                                            "type": "string",
                                            "description": "User's zip code (nullable)"
                                        },
                                        "phone_number": {
                                            "type": "string",
                                            "description": "User's phone number (nullable)",
                                            "nullable": true,
                                            "default": "Null"
                                        },
                                        "sex_of_birth": {
                                            "type": "string",
                                            "description": "User's biological sex at birth (nullable)"
                                        },
                                        "profile_photo": {
                                            "type": "object",
                                            "properties": {
                                                "access": {
                                                    "type": "string",
                                                    "description": "",
                                                    "enum": [
                                                        "public",
                                                        "private"
                                                    ],
                                                    "default": "public"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": ""
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": ""
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": ""
                                                },
                                                "size": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "mime": {
                                                    "type": "string",
                                                    "description": ""
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "description": ""
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "",
                                                    "nullable": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "profiles_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "description": "User's first name",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "User's last name",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "User's date of birth",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "description": "User's gender",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ]
                                    },
                                    "height_cm": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's height in centimeters"
                                    },
                                    "weight_kg": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's weight in kilograms"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "description": "User's zip code (nullable)"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "description": "User's phone number (nullable)",
                                        "nullable": true
                                    },
                                    "sex_of_birth": {
                                        "type": "string",
                                        "description": "User's biological sex at birth (nullable)"
                                    }
                                },
                                "required": [
                                    "dob",
                                    "gender",
                                    "height_cm",
                                    "weight_kg"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "profiles_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "description": "User's first name",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "User's last name",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "User's date of birth",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "description": "User's gender",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ]
                                    },
                                    "height_cm": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's height in centimeters"
                                    },
                                    "weight_kg": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's weight in kilograms"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "description": "User's zip code (nullable)"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "description": "User's phone number (nullable)",
                                        "nullable": true
                                    },
                                    "sex_of_birth": {
                                        "type": "string",
                                        "description": "User's biological sex at birth (nullable)"
                                    }
                                },
                                "required": [
                                    "dob",
                                    "gender",
                                    "height_cm",
                                    "weight_kg"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/profiles": {
            "get": {
                "operationId": "anatomous_mvp/profiles|GET",
                "summary": "Query all profiles records",
                "description": "Query all profiles records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "profiles"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": ""
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "description": "User's first name",
                                                        "nullable": true,
                                                        "default": "Null"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "description": "User's last name",
                                                        "nullable": true,
                                                        "default": "Null"
                                                    },
                                                    "dob": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "User's date of birth",
                                                        "nullable": true
                                                    },
                                                    "gender": {
                                                        "type": "string",
                                                        "description": "User's gender",
                                                        "enum": [
                                                            "male",
                                                            "female",
                                                            "other"
                                                        ]
                                                    },
                                                    "height_cm": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's height in centimeters"
                                                    },
                                                    "weight_kg": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "User's weight in kilograms"
                                                    },
                                                    "zip_code": {
                                                        "type": "string",
                                                        "description": "User's zip code (nullable)"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "description": "User's phone number (nullable)",
                                                        "nullable": true,
                                                        "default": "Null"
                                                    },
                                                    "sex_of_birth": {
                                                        "type": "string",
                                                        "description": "User's biological sex at birth (nullable)"
                                                    },
                                                    "profile_photo": {
                                                        "type": "object",
                                                        "properties": {
                                                            "access": {
                                                                "type": "string",
                                                                "description": "",
                                                                "enum": [
                                                                    "public",
                                                                    "private"
                                                                ],
                                                                "default": "public"
                                                            },
                                                            "path": {
                                                                "type": "string",
                                                                "description": ""
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "description": ""
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "description": ""
                                                            },
                                                            "size": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "description": ""
                                                            },
                                                            "mime": {
                                                                "type": "string",
                                                                "description": ""
                                                            },
                                                            "meta": {
                                                                "type": "object",
                                                                "description": ""
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "description": "",
                                                                "nullable": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/profiles|POST",
                "summary": "Add profiles record",
                "description": "Add profiles record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "profiles"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": ""
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "User's first name",
                                                    "nullable": true,
                                                    "default": "Null"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "description": "User's last name",
                                                    "nullable": true,
                                                    "default": "Null"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "User's date of birth",
                                                    "nullable": true
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "description": "User's gender",
                                                    "enum": [
                                                        "male",
                                                        "female",
                                                        "other"
                                                    ]
                                                },
                                                "height_cm": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's height in centimeters"
                                                },
                                                "weight_kg": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "User's weight in kilograms"
                                                },
                                                "zip_code": {
                                                    "type": "string",
                                                    "description": "User's zip code (nullable)"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "description": "User's phone number (nullable)",
                                                    "nullable": true,
                                                    "default": "Null"
                                                },
                                                "sex_of_birth": {
                                                    "type": "string",
                                                    "description": "User's biological sex at birth (nullable)"
                                                },
                                                "profile_photo": {
                                                    "type": "object",
                                                    "properties": {
                                                        "access": {
                                                            "type": "string",
                                                            "description": "",
                                                            "enum": [
                                                                "public",
                                                                "private"
                                                            ],
                                                            "default": "public"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "size": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "description": ""
                                                        },
                                                        "mime": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "meta": {
                                                            "type": "object",
                                                            "description": ""
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "",
                                                            "nullable": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "description": "User's first name",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "User's last name",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "User's date of birth",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "description": "User's gender",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ]
                                    },
                                    "height_cm": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's height in centimeters"
                                    },
                                    "weight_kg": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's weight in kilograms"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "description": "User's zip code (nullable)"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "description": "User's phone number (nullable)",
                                        "nullable": true
                                    },
                                    "sex_of_birth": {
                                        "type": "string",
                                        "description": "User's biological sex at birth (nullable)"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "dob",
                                    "gender",
                                    "height_cm",
                                    "weight_kg"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "description": "User's first name",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "User's last name",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "User's date of birth",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "description": "User's gender",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ]
                                    },
                                    "height_cm": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's height in centimeters"
                                    },
                                    "weight_kg": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "User's weight in kilograms"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "description": "User's zip code (nullable)"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "description": "User's phone number (nullable)",
                                        "nullable": true
                                    },
                                    "sex_of_birth": {
                                        "type": "string",
                                        "description": "User's biological sex at birth (nullable)"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "dob",
                                    "gender",
                                    "height_cm",
                                    "weight_kg"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/reports/download": {
            "get": {
                "operationId": "anatomous_mvp/reports/download|GET",
                "summary": "Downloads PDF/CSV report",
                "description": "Downloads PDF/CSV report\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E required",
                "tags": [
                    "reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/reports/shared/token": {
            "get": {
                "operationId": "anatomous_mvp/reports/shared/token|GET",
                "summary": "View report via public link",
                "description": "View report via public link\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E required",
                "tags": [
                    "reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/reports/share": {
            "post": {
                "operationId": "anatomous_mvp/reports/share|POST",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "reports"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "operationId": "anatomous_mvp/reports|GET",
                "summary": "Returns a list of reports, filtered by fromDate, toDate, type",
                "description": "Returns a list of reports, filtered by fromDate, toDate, type\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E required",
                "tags": [
                    "reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/reports|POST",
                "summary": "Add report",
                "description": "Add report\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "reports"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/sensitivities/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/sensitivities/{user_id}|DELETE",
                "summary": "Delete sensitivities record",
                "description": "Delete sensitivities record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "sensitivities"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/sensitivities/{user_id}|GET",
                "summary": "Get sensitivities record",
                "description": "Get sensitivities record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "sensitivities"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "sensitivity_name": {
                                                        "type": "string",
                                                        "description": "Name of the sensitivity"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                                    },
                                                    "triggers": {
                                                        "type": "string",
                                                        "description": "Triggers for the sensitivity (nullable)"
                                                    },
                                                    "symptoms": {
                                                        "type": "string",
                                                        "description": "Symptoms experienced (nullable)"
                                                    },
                                                    "management": {
                                                        "type": "string",
                                                        "description": "Management strategies (nullable)"
                                                    },
                                                    "severity": {
                                                        "type": "string",
                                                        "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the sensitivity (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/sensitivities/{user_id}|PATCH",
                "summary": "Edit sensitivities record",
                "description": "Edit sensitivities record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "sensitivities"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "sensitivity_name": {
                                                    "type": "string",
                                                    "description": "Name of the sensitivity"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                                },
                                                "triggers": {
                                                    "type": "string",
                                                    "description": "Triggers for the sensitivity (nullable)"
                                                },
                                                "symptoms": {
                                                    "type": "string",
                                                    "description": "Symptoms experienced (nullable)"
                                                },
                                                "management": {
                                                    "type": "string",
                                                    "description": "Management strategies (nullable)"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the sensitivity (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sensitivities_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "sensitivity_name": {
                                        "type": "string",
                                        "description": "Name of the sensitivity"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                    },
                                    "triggers": {
                                        "type": "string",
                                        "description": "Triggers for the sensitivity (nullable)"
                                    },
                                    "symptoms": {
                                        "type": "string",
                                        "description": "Symptoms experienced (nullable)"
                                    },
                                    "management": {
                                        "type": "string",
                                        "description": "Management strategies (nullable)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the sensitivity (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sensitivities_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "sensitivity_name": {
                                        "type": "string",
                                        "description": "Name of the sensitivity"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                    },
                                    "triggers": {
                                        "type": "string",
                                        "description": "Triggers for the sensitivity (nullable)"
                                    },
                                    "symptoms": {
                                        "type": "string",
                                        "description": "Symptoms experienced (nullable)"
                                    },
                                    "management": {
                                        "type": "string",
                                        "description": "Management strategies (nullable)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the sensitivity (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sensitivities": {
            "get": {
                "operationId": "anatomous_mvp/sensitivities|GET",
                "summary": "Query all sensitivities records",
                "description": "Query all sensitivities records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "sensitivities"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "sensitivity_name": {
                                                        "type": "string",
                                                        "description": "Name of the sensitivity"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                                    },
                                                    "triggers": {
                                                        "type": "string",
                                                        "description": "Triggers for the sensitivity (nullable)"
                                                    },
                                                    "symptoms": {
                                                        "type": "string",
                                                        "description": "Symptoms experienced (nullable)"
                                                    },
                                                    "management": {
                                                        "type": "string",
                                                        "description": "Management strategies (nullable)"
                                                    },
                                                    "severity": {
                                                        "type": "string",
                                                        "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the sensitivity (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/sensitivities|POST",
                "summary": "Add sensitivities record",
                "description": "Add sensitivities record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "sensitivities"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "sensitivity_name": {
                                                    "type": "string",
                                                    "description": "Name of the sensitivity"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                                },
                                                "triggers": {
                                                    "type": "string",
                                                    "description": "Triggers for the sensitivity (nullable)"
                                                },
                                                "symptoms": {
                                                    "type": "string",
                                                    "description": "Symptoms experienced (nullable)"
                                                },
                                                "management": {
                                                    "type": "string",
                                                    "description": "Management strategies (nullable)"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the sensitivity (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "sensitivity_name": {
                                        "type": "string",
                                        "description": "Name of the sensitivity"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                    },
                                    "triggers": {
                                        "type": "string",
                                        "description": "Triggers for the sensitivity (nullable)"
                                    },
                                    "symptoms": {
                                        "type": "string",
                                        "description": "Symptoms experienced (nullable)"
                                    },
                                    "management": {
                                        "type": "string",
                                        "description": "Management strategies (nullable)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the sensitivity (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "sensitivity_name": {
                                        "type": "string",
                                        "description": "Name of the sensitivity"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of sensitivity (e.g., environmental, chemical, food, other)"
                                    },
                                    "triggers": {
                                        "type": "string",
                                        "description": "Triggers for the sensitivity (nullable)"
                                    },
                                    "symptoms": {
                                        "type": "string",
                                        "description": "Symptoms experienced (nullable)"
                                    },
                                    "management": {
                                        "type": "string",
                                        "description": "Management strategies (nullable)"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "Severity of the sensitivity (e.g., mild, moderate, severe)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the sensitivity (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings/export": {
            "post": {
                "operationId": "anatomous_mvp/settings/export|POST",
                "summary": "Saves export settings",
                "description": "Saves export settings\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "settings"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/surgical_history/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/surgical_history/{user_id}|DELETE",
                "summary": "Delete surgical_history record",
                "description": "Delete surgical_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "surgical_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/surgical_history/{user_id}|GET",
                "summary": "Get surgical_history record",
                "description": "Get surgical_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "surgical_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "procedure_name": {
                                                        "type": "string",
                                                        "description": "Name of the surgical procedure"
                                                    },
                                                    "surgery_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Date of the surgery"
                                                    },
                                                    "surgeon": {
                                                        "type": "string",
                                                        "description": "Name of the surgeon (nullable)"
                                                    },
                                                    "hospital": {
                                                        "type": "string",
                                                        "description": "Hospital or clinic where the surgery was performed (nullable)"
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "description": "Reason for the surgery (nullable)"
                                                    },
                                                    "outcome": {
                                                        "type": "string",
                                                        "description": "Outcome of the surgery (nullable)"
                                                    },
                                                    "complications": {
                                                        "type": "string",
                                                        "description": "Complications experienced (nullable)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the surgery (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/surgical_history/{user_id}|PATCH",
                "summary": "Edit surgical_history record",
                "description": "Edit surgical_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "surgical_history"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "procedure_name": {
                                                    "type": "string",
                                                    "description": "Name of the surgical procedure"
                                                },
                                                "surgery_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of the surgery"
                                                },
                                                "surgeon": {
                                                    "type": "string",
                                                    "description": "Name of the surgeon (nullable)"
                                                },
                                                "hospital": {
                                                    "type": "string",
                                                    "description": "Hospital or clinic where the surgery was performed (nullable)"
                                                },
                                                "reason": {
                                                    "type": "string",
                                                    "description": "Reason for the surgery (nullable)"
                                                },
                                                "outcome": {
                                                    "type": "string",
                                                    "description": "Outcome of the surgery (nullable)"
                                                },
                                                "complications": {
                                                    "type": "string",
                                                    "description": "Complications experienced (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the surgery (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "surgical_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "procedure_name": {
                                        "type": "string",
                                        "description": "Name of the surgical procedure"
                                    },
                                    "surgery_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the surgery"
                                    },
                                    "surgeon": {
                                        "type": "string",
                                        "description": "Name of the surgeon (nullable)"
                                    },
                                    "hospital": {
                                        "type": "string",
                                        "description": "Hospital or clinic where the surgery was performed (nullable)"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "description": "Reason for the surgery (nullable)"
                                    },
                                    "outcome": {
                                        "type": "string",
                                        "description": "Outcome of the surgery (nullable)"
                                    },
                                    "complications": {
                                        "type": "string",
                                        "description": "Complications experienced (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the surgery (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "surgical_history_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "procedure_name": {
                                        "type": "string",
                                        "description": "Name of the surgical procedure"
                                    },
                                    "surgery_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the surgery"
                                    },
                                    "surgeon": {
                                        "type": "string",
                                        "description": "Name of the surgeon (nullable)"
                                    },
                                    "hospital": {
                                        "type": "string",
                                        "description": "Hospital or clinic where the surgery was performed (nullable)"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "description": "Reason for the surgery (nullable)"
                                    },
                                    "outcome": {
                                        "type": "string",
                                        "description": "Outcome of the surgery (nullable)"
                                    },
                                    "complications": {
                                        "type": "string",
                                        "description": "Complications experienced (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the surgery (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/surgical_history": {
            "get": {
                "operationId": "anatomous_mvp/surgical_history|GET",
                "summary": "Query all surgical_history records",
                "description": "Query all surgical_history records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "surgical_history"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "procedure_name": {
                                                        "type": "string",
                                                        "description": "Name of the surgical procedure"
                                                    },
                                                    "surgery_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Date of the surgery"
                                                    },
                                                    "surgeon": {
                                                        "type": "string",
                                                        "description": "Name of the surgeon (nullable)"
                                                    },
                                                    "hospital": {
                                                        "type": "string",
                                                        "description": "Hospital or clinic where the surgery was performed (nullable)"
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "description": "Reason for the surgery (nullable)"
                                                    },
                                                    "outcome": {
                                                        "type": "string",
                                                        "description": "Outcome of the surgery (nullable)"
                                                    },
                                                    "complications": {
                                                        "type": "string",
                                                        "description": "Complications experienced (nullable)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the surgery (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/surgical_history|POST",
                "summary": "Add surgical_history record",
                "description": "Add surgical_history record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "surgical_history"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "procedure_name": {
                                                    "type": "string",
                                                    "description": "Name of the surgical procedure"
                                                },
                                                "surgery_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of the surgery"
                                                },
                                                "surgeon": {
                                                    "type": "string",
                                                    "description": "Name of the surgeon (nullable)"
                                                },
                                                "hospital": {
                                                    "type": "string",
                                                    "description": "Hospital or clinic where the surgery was performed (nullable)"
                                                },
                                                "reason": {
                                                    "type": "string",
                                                    "description": "Reason for the surgery (nullable)"
                                                },
                                                "outcome": {
                                                    "type": "string",
                                                    "description": "Outcome of the surgery (nullable)"
                                                },
                                                "complications": {
                                                    "type": "string",
                                                    "description": "Complications experienced (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the surgery (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "procedure_name": {
                                        "type": "string",
                                        "description": "Name of the surgical procedure"
                                    },
                                    "surgery_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the surgery"
                                    },
                                    "surgeon": {
                                        "type": "string",
                                        "description": "Name of the surgeon (nullable)"
                                    },
                                    "hospital": {
                                        "type": "string",
                                        "description": "Hospital or clinic where the surgery was performed (nullable)"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "description": "Reason for the surgery (nullable)"
                                    },
                                    "outcome": {
                                        "type": "string",
                                        "description": "Outcome of the surgery (nullable)"
                                    },
                                    "complications": {
                                        "type": "string",
                                        "description": "Complications experienced (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the surgery (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "procedure_name": {
                                        "type": "string",
                                        "description": "Name of the surgical procedure"
                                    },
                                    "surgery_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of the surgery"
                                    },
                                    "surgeon": {
                                        "type": "string",
                                        "description": "Name of the surgeon (nullable)"
                                    },
                                    "hospital": {
                                        "type": "string",
                                        "description": "Hospital or clinic where the surgery was performed (nullable)"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "description": "Reason for the surgery (nullable)"
                                    },
                                    "outcome": {
                                        "type": "string",
                                        "description": "Outcome of the surgery (nullable)"
                                    },
                                    "complications": {
                                        "type": "string",
                                        "description": "Complications experienced (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the surgery (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload/attachment_file": {
            "post": {
                "operationId": "anatomous_mvp/upload/attachment_file|POST",
                "summary": "",
                "description": "\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "upload"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "saved_upload": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the user who uploaded the file"
                                                },
                                                "filename": {
                                                    "type": "string",
                                                    "description": "Name of the uploaded file"
                                                },
                                                "file_type": {
                                                    "type": "string",
                                                    "description": "Type of file (e.g., pdf, image, docx)",
                                                    "enum": [
                                                        "pdf",
                                                        "image",
                                                        "docx"
                                                    ]
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "description": "Category of the uploaded file (e.g., Labs, Radiology, Notes)",
                                                    "enum": [
                                                        "Labs",
                                                        "Radiology",
                                                        "Notes",
                                                        "Medical"
                                                    ]
                                                },
                                                "uploaded_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Date and time when the file was uploaded"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "URL for accessing the file"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes or tagging (nullable)"
                                                },
                                                "deleted": {
                                                    "type": "boolean",
                                                    "description": "Flag for soft deletion",
                                                    "default": "false"
                                                },
                                                "deleted_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp when the record was soft-deleted (nullable)"
                                                },
                                                "file": {
                                                    "type": "object",
                                                    "properties": {
                                                        "access": {
                                                            "type": "string",
                                                            "description": "",
                                                            "enum": [
                                                                "public",
                                                                "private"
                                                            ],
                                                            "default": "public"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "size": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "description": ""
                                                        },
                                                        "mime": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "meta": {
                                                            "type": "object",
                                                            "description": ""
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "",
                                                            "nullable": true
                                                        }
                                                    }
                                                },
                                                "private_file": {
                                                    "type": "object",
                                                    "properties": {
                                                        "access": {
                                                            "type": "string",
                                                            "description": "",
                                                            "enum": [
                                                                "public",
                                                                "private"
                                                            ],
                                                            "default": "public"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "size": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "description": ""
                                                        },
                                                        "mime": {
                                                            "type": "string",
                                                            "description": ""
                                                        },
                                                        "meta": {
                                                            "type": "object",
                                                            "description": ""
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "nullable": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": ""
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "category uploud file('medical', 'insurance', 'lab', 'other')",
                                        "enum": [
                                            "Labs",
                                            "Radiology",
                                            "Notes",
                                            "Medical"
                                        ]
                                    },
                                    "file_type": {
                                        "type": "string",
                                        "description": "",
                                        "enum": [
                                            "pdf",
                                            "image",
                                            "docx"
                                        ]
                                    },
                                    "file_name": {
                                        "type": "string",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "file",
                                    "user_id",
                                    "category",
                                    "file_name"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/upload/delete_file": {
            "patch": {
                "operationId": "anatomous_mvp/upload/delete_file|PATCH",
                "summary": "Delete file",
                "description": "Delete file\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "upload"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "file_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "file_id"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "",
                                        "nullable": true
                                    },
                                    "file_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "file_id"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/upload/download_file": {
            "get": {
                "operationId": "anatomous_mvp/upload/download_file|GET",
                "summary": "Download file (file_id)",
                "description": "Download file (file_id)\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "upload"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "query",
                        "description": "Id file what you download",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "file_url": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/upload/get_files": {
            "get": {
                "operationId": "anatomous_mvp/upload/get_files|GET",
                "summary": "Get upload files",
                "description": "Get upload files\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "upload"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": ""
                                            },
                                            "created_at": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "",
                                                "default": "now"
                                            },
                                            "user_id": {
                                                "type": "string",
                                                "format": "uuid",
                                                "description": "Reference to the user who uploaded the file"
                                            },
                                            "filename": {
                                                "type": "string",
                                                "description": "Name of the uploaded file"
                                            },
                                            "file_type": {
                                                "type": "string",
                                                "description": "Type of file (e.g., pdf, image, docx)",
                                                "enum": [
                                                    "pdf",
                                                    "image",
                                                    "docx"
                                                ]
                                            },
                                            "category": {
                                                "type": "string",
                                                "description": "Category of the uploaded file (e.g., Labs, Radiology, Notes)",
                                                "enum": [
                                                    "Labs",
                                                    "Radiology",
                                                    "Notes",
                                                    "Medical"
                                                ]
                                            },
                                            "uploaded_at": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "Date and time when the file was uploaded"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "URL for accessing the file"
                                            },
                                            "notes": {
                                                "type": "string",
                                                "description": "Additional notes or tagging (nullable)"
                                            },
                                            "deleted": {
                                                "type": "boolean",
                                                "description": "Flag for soft deletion",
                                                "default": "false"
                                            },
                                            "deleted_at": {
                                                "type": "number",
                                                "format": "timestamptz",
                                                "description": "Timestamp when the record was soft-deleted (nullable)"
                                            },
                                            "file": {
                                                "type": "object",
                                                "properties": {
                                                    "access": {
                                                        "type": "string",
                                                        "description": "",
                                                        "enum": [
                                                            "public",
                                                            "private"
                                                        ],
                                                        "default": "public"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "size": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "mime": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": ""
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "",
                                                        "nullable": true
                                                    }
                                                }
                                            },
                                            "private_file": {
                                                "type": "object",
                                                "properties": {
                                                    "access": {
                                                        "type": "string",
                                                        "description": "",
                                                        "enum": [
                                                            "public",
                                                            "private"
                                                        ],
                                                        "default": "public"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "size": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "mime": {
                                                        "type": "string",
                                                        "description": ""
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": ""
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "",
                                                        "nullable": true
                                                    }
                                                },
                                                "nullable": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/user_settings/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/user_settings/{user_id}|DELETE",
                "summary": "Delete user_settings record.",
                "description": "Delete user_settings record.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "user_settings"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/user_settings/{user_id}|GET",
                "summary": "Get user_settings record for user",
                "description": "Get user_settings record for user\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "user_settings"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": ""
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "health_snapshot": {
                                                    "type": "object",
                                                    "description": "JSON object storing health-related data",
                                                    "nullable": true
                                                },
                                                "lifestyle": {
                                                    "type": "object",
                                                    "description": "JSON object storing lifestyle-related data",
                                                    "nullable": true
                                                },
                                                "privacy": {
                                                    "type": "object",
                                                    "description": "JSON object storing privacy settings",
                                                    "nullable": true
                                                },
                                                "onboarding": {
                                                    "type": "object",
                                                    "description": "JSON object storing onboarding settings",
                                                    "nullable": true
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the user settings record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/user_settings/{user_id}|PATCH",
                "summary": "Edit user_settings record",
                "description": "Edit user_settings record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "user_settings"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": ""
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "health_snapshot": {
                                                    "type": "object",
                                                    "description": "JSON object storing health-related data",
                                                    "nullable": true
                                                },
                                                "lifestyle": {
                                                    "type": "object",
                                                    "description": "JSON object storing lifestyle-related data",
                                                    "nullable": true
                                                },
                                                "privacy": {
                                                    "type": "object",
                                                    "description": "JSON object storing privacy settings",
                                                    "nullable": true
                                                },
                                                "onboarding": {
                                                    "type": "object",
                                                    "description": "JSON object storing onboarding settings",
                                                    "nullable": true
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the user settings record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_settings_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "health_snapshot": {
                                        "type": "object",
                                        "description": "JSON object storing health-related data",
                                        "nullable": true
                                    },
                                    "lifestyle": {
                                        "type": "object",
                                        "description": "JSON object storing lifestyle-related data",
                                        "nullable": true
                                    },
                                    "privacy": {
                                        "type": "object",
                                        "description": "JSON object storing privacy settings",
                                        "nullable": true
                                    },
                                    "onboarding": {
                                        "type": "object",
                                        "description": "JSON object storing onboarding settings",
                                        "nullable": true
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user settings record"
                                    }
                                },
                                "required": [
                                    "updated_at"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_settings_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": ""
                                    },
                                    "health_snapshot": {
                                        "type": "object",
                                        "description": "JSON object storing health-related data",
                                        "nullable": true
                                    },
                                    "lifestyle": {
                                        "type": "object",
                                        "description": "JSON object storing lifestyle-related data",
                                        "nullable": true
                                    },
                                    "privacy": {
                                        "type": "object",
                                        "description": "JSON object storing privacy settings",
                                        "nullable": true
                                    },
                                    "onboarding": {
                                        "type": "object",
                                        "description": "JSON object storing onboarding settings",
                                        "nullable": true
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user settings record"
                                    }
                                },
                                "required": [
                                    "updated_at"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/user_settings": {
            "get": {
                "operationId": "anatomous_mvp/user_settings|GET",
                "summary": "Query all user_settings records",
                "description": "Query all user_settings records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "user_settings"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": ""
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "health_snapshot": {
                                                        "type": "object",
                                                        "description": "JSON object storing health-related data",
                                                        "nullable": true
                                                    },
                                                    "lifestyle": {
                                                        "type": "object",
                                                        "description": "JSON object storing lifestyle-related data",
                                                        "nullable": true
                                                    },
                                                    "privacy": {
                                                        "type": "object",
                                                        "description": "JSON object storing privacy settings",
                                                        "nullable": true
                                                    },
                                                    "onboarding": {
                                                        "type": "object",
                                                        "description": "JSON object storing onboarding settings",
                                                        "nullable": true
                                                    },
                                                    "updated_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the user settings record"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/user_settings|POST",
                "summary": "Add user_settings record",
                "description": "Add user_settings record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "user_settings"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": ""
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "health_snapshot": {
                                                    "type": "object",
                                                    "description": "JSON object storing health-related data",
                                                    "nullable": true
                                                },
                                                "lifestyle": {
                                                    "type": "object",
                                                    "description": "JSON object storing lifestyle-related data",
                                                    "nullable": true
                                                },
                                                "privacy": {
                                                    "type": "object",
                                                    "description": "JSON object storing privacy settings",
                                                    "nullable": true
                                                },
                                                "onboarding": {
                                                    "type": "object",
                                                    "description": "JSON object storing onboarding settings",
                                                    "nullable": true
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the user settings record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "health_snapshot": {
                                        "type": "object",
                                        "description": "JSON object storing health-related data",
                                        "nullable": true
                                    },
                                    "lifestyle": {
                                        "type": "object",
                                        "description": "JSON object storing lifestyle-related data",
                                        "nullable": true
                                    },
                                    "privacy": {
                                        "type": "object",
                                        "description": "JSON object storing privacy settings",
                                        "nullable": true
                                    },
                                    "onboarding": {
                                        "type": "object",
                                        "description": "JSON object storing onboarding settings",
                                        "nullable": true
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user settings record"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "updated_at"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "health_snapshot": {
                                        "type": "object",
                                        "description": "JSON object storing health-related data",
                                        "nullable": true
                                    },
                                    "lifestyle": {
                                        "type": "object",
                                        "description": "JSON object storing lifestyle-related data",
                                        "nullable": true
                                    },
                                    "privacy": {
                                        "type": "object",
                                        "description": "JSON object storing privacy settings",
                                        "nullable": true
                                    },
                                    "onboarding": {
                                        "type": "object",
                                        "description": "JSON object storing onboarding settings",
                                        "nullable": true
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user settings record"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "updated_at"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/users/{user_id}|DELETE",
                "summary": "Delete users record.",
                "description": "Delete users record.\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "users"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/users/{user_id}|GET",
                "summary": "Get users record",
                "description": "Get users record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "users"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "User's unique email address",
                                                    "format": "email"
                                                },
                                                "password_hash": {
                                                    "type": "string",
                                                    "description": "Hashed password for user authentication",
                                                    "format": "password"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "description": "User's role (e.g., user, admin)",
                                                    "enum": [
                                                        "user",
                                                        "admin"
                                                    ]
                                                },
                                                "company_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Reference to the associated company (nullable)"
                                                },
                                                "subscription_plan": {
                                                    "type": "string",
                                                    "description": "User's subscription plan",
                                                    "enum": [
                                                        "core",
                                                        "family",
                                                        "complete"
                                                    ]
                                                },
                                                "subscription_status": {
                                                    "type": "string",
                                                    "description": "User's current subscription status",
                                                    "enum": [
                                                        "active",
                                                        "expired",
                                                        "canceled"
                                                    ]
                                                },
                                                "last_active_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the user's last activity (nullable)"
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the user record"
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "auth_type": {
                                                    "type": "string",
                                                    "description": "User's authentication type",
                                                    "enum": [
                                                        "google",
                                                        "email",
                                                        "facebook"
                                                    ]
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/users/{user_id}|PATCH",
                "summary": "Edit users record",
                "description": "Edit users record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "users"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "User's unique email address",
                                                    "format": "email"
                                                },
                                                "password_hash": {
                                                    "type": "string",
                                                    "description": "Hashed password for user authentication",
                                                    "format": "password"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "description": "User's role (e.g., user, admin)",
                                                    "enum": [
                                                        "user",
                                                        "admin"
                                                    ]
                                                },
                                                "company_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Reference to the associated company (nullable)"
                                                },
                                                "subscription_plan": {
                                                    "type": "string",
                                                    "description": "User's subscription plan",
                                                    "enum": [
                                                        "core",
                                                        "family",
                                                        "complete"
                                                    ]
                                                },
                                                "subscription_status": {
                                                    "type": "string",
                                                    "description": "User's current subscription status",
                                                    "enum": [
                                                        "active",
                                                        "expired",
                                                        "canceled"
                                                    ]
                                                },
                                                "last_active_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the user's last activity (nullable)"
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the user record"
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "auth_type": {
                                                    "type": "string",
                                                    "description": "User's authentication type",
                                                    "enum": [
                                                        "google",
                                                        "email",
                                                        "facebook"
                                                    ]
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User's unique email address",
                                        "format": "email"
                                    },
                                    "password_hash": {
                                        "type": "string",
                                        "description": "Hashed password for user authentication",
                                        "format": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "User's role (e.g., user, admin)",
                                        "enum": [
                                            "user",
                                            "admin"
                                        ]
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Reference to the associated company (nullable)"
                                    },
                                    "subscription_plan": {
                                        "type": "string",
                                        "description": "User's subscription plan",
                                        "enum": [
                                            "core",
                                            "family",
                                            "complete"
                                        ]
                                    },
                                    "subscription_status": {
                                        "type": "string",
                                        "description": "User's current subscription status",
                                        "enum": [
                                            "active",
                                            "expired",
                                            "canceled"
                                        ]
                                    },
                                    "last_active_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the user's last activity (nullable)"
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user record"
                                    },
                                    "auth_type": {
                                        "type": "string",
                                        "description": "User's authentication type",
                                        "enum": [
                                            "google",
                                            "email",
                                            "facebook"
                                        ]
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User's unique email address",
                                        "format": "email"
                                    },
                                    "password_hash": {
                                        "type": "string",
                                        "description": "Hashed password for user authentication",
                                        "format": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "User's role (e.g., user, admin)",
                                        "enum": [
                                            "user",
                                            "admin"
                                        ]
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Reference to the associated company (nullable)"
                                    },
                                    "subscription_plan": {
                                        "type": "string",
                                        "description": "User's subscription plan",
                                        "enum": [
                                            "core",
                                            "family",
                                            "complete"
                                        ]
                                    },
                                    "subscription_status": {
                                        "type": "string",
                                        "description": "User's current subscription status",
                                        "enum": [
                                            "active",
                                            "expired",
                                            "canceled"
                                        ]
                                    },
                                    "last_active_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the user's last activity (nullable)"
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user record"
                                    },
                                    "auth_type": {
                                        "type": "string",
                                        "description": "User's authentication type",
                                        "enum": [
                                            "google",
                                            "email",
                                            "facebook"
                                        ]
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "operationId": "anatomous_mvp/users|GET",
                "summary": "Query all users records",
                "description": "Query all users records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "users"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": ""
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "description": "User's unique email address",
                                                        "format": "email"
                                                    },
                                                    "password_hash": {
                                                        "type": "string",
                                                        "description": "Hashed password for user authentication",
                                                        "format": "password"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "description": "User's role (e.g., user, admin)",
                                                        "enum": [
                                                            "user",
                                                            "admin"
                                                        ]
                                                    },
                                                    "company_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "Reference to the associated company (nullable)"
                                                    },
                                                    "subscription_plan": {
                                                        "type": "string",
                                                        "description": "User's subscription plan",
                                                        "enum": [
                                                            "core",
                                                            "family",
                                                            "complete"
                                                        ]
                                                    },
                                                    "subscription_status": {
                                                        "type": "string",
                                                        "description": "User's current subscription status",
                                                        "enum": [
                                                            "active",
                                                            "expired",
                                                            "canceled"
                                                        ]
                                                    },
                                                    "last_active_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the user's last activity (nullable)"
                                                    },
                                                    "updated_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the user record"
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "auth_type": {
                                                        "type": "string",
                                                        "description": "User's authentication type",
                                                        "enum": [
                                                            "google",
                                                            "email",
                                                            "facebook"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/users|POST",
                "summary": "Add users record",
                "description": "Add users record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "users"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": ""
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "User's unique email address",
                                                    "format": "email"
                                                },
                                                "password_hash": {
                                                    "type": "string",
                                                    "description": "Hashed password for user authentication",
                                                    "format": "password"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "description": "User's role (e.g., user, admin)",
                                                    "enum": [
                                                        "user",
                                                        "admin"
                                                    ]
                                                },
                                                "company_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Reference to the associated company (nullable)"
                                                },
                                                "subscription_plan": {
                                                    "type": "string",
                                                    "description": "User's subscription plan",
                                                    "enum": [
                                                        "core",
                                                        "family",
                                                        "complete"
                                                    ]
                                                },
                                                "subscription_status": {
                                                    "type": "string",
                                                    "description": "User's current subscription status",
                                                    "enum": [
                                                        "active",
                                                        "expired",
                                                        "canceled"
                                                    ]
                                                },
                                                "last_active_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the user's last activity (nullable)"
                                                },
                                                "updated_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the user record"
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "auth_type": {
                                                    "type": "string",
                                                    "description": "User's authentication type",
                                                    "enum": [
                                                        "google",
                                                        "email",
                                                        "facebook"
                                                    ]
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User's unique email address",
                                        "format": "email"
                                    },
                                    "password_hash": {
                                        "type": "string",
                                        "description": "Hashed password for user authentication",
                                        "format": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "User's role (e.g., user, admin)",
                                        "enum": [
                                            "user",
                                            "admin"
                                        ]
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Reference to the associated company (nullable)"
                                    },
                                    "subscription_plan": {
                                        "type": "string",
                                        "description": "User's subscription plan",
                                        "enum": [
                                            "core",
                                            "family",
                                            "complete"
                                        ]
                                    },
                                    "subscription_status": {
                                        "type": "string",
                                        "description": "User's current subscription status",
                                        "enum": [
                                            "active",
                                            "expired",
                                            "canceled"
                                        ]
                                    },
                                    "last_active_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the user's last activity (nullable)"
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user record"
                                    },
                                    "auth_type": {
                                        "type": "string",
                                        "description": "User's authentication type",
                                        "enum": [
                                            "google",
                                            "email",
                                            "facebook"
                                        ]
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User's unique email address",
                                        "format": "email"
                                    },
                                    "password_hash": {
                                        "type": "string",
                                        "description": "Hashed password for user authentication",
                                        "format": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "User's role (e.g., user, admin)",
                                        "enum": [
                                            "user",
                                            "admin"
                                        ]
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Reference to the associated company (nullable)"
                                    },
                                    "subscription_plan": {
                                        "type": "string",
                                        "description": "User's subscription plan",
                                        "enum": [
                                            "core",
                                            "family",
                                            "complete"
                                        ]
                                    },
                                    "subscription_status": {
                                        "type": "string",
                                        "description": "User's current subscription status",
                                        "enum": [
                                            "active",
                                            "expired",
                                            "canceled"
                                        ]
                                    },
                                    "last_active_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the user's last activity (nullable)"
                                    },
                                    "updated_at": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the user record"
                                    },
                                    "auth_type": {
                                        "type": "string",
                                        "description": "User's authentication type",
                                        "enum": [
                                            "google",
                                            "email",
                                            "facebook"
                                        ]
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/vaccinations/{user_id}": {
            "delete": {
                "operationId": "anatomous_mvp/vaccinations/{user_id}|DELETE",
                "summary": "Delete vaccinations record",
                "description": "Delete vaccinations record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "vaccinations"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result1": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "get": {
                "operationId": "anatomous_mvp/vaccinations/{user_id}|GET",
                "summary": "Get vaccinations record",
                "description": "Get vaccinations record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "vaccinations"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "vaccine_name": {
                                                        "type": "string",
                                                        "description": "Name of the vaccine"
                                                    },
                                                    "vaccination_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Date of vaccination"
                                                    },
                                                    "lot_number": {
                                                        "type": "string",
                                                        "description": "Lot number of the vaccine (nullable)"
                                                    },
                                                    "administrator": {
                                                        "type": "string",
                                                        "description": "Administrator of the vaccine (nullable)"
                                                    },
                                                    "next_due_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Next due date for vaccination (nullable)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the vaccination (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "patch": {
                "operationId": "anatomous_mvp/vaccinations/{user_id}|PATCH",
                "summary": "Edit vaccinations record",
                "description": "Edit vaccinations record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "vaccinations"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Reference to the associated user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "vaccine_name": {
                                                    "type": "string",
                                                    "description": "Name of the vaccine"
                                                },
                                                "vaccination_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of vaccination"
                                                },
                                                "lot_number": {
                                                    "type": "string",
                                                    "description": "Lot number of the vaccine (nullable)"
                                                },
                                                "administrator": {
                                                    "type": "string",
                                                    "description": "Administrator of the vaccine (nullable)"
                                                },
                                                "next_due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Next due date for vaccination (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the vaccination (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "vaccinations_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "vaccine_name": {
                                        "type": "string",
                                        "description": "Name of the vaccine"
                                    },
                                    "vaccination_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of vaccination"
                                    },
                                    "lot_number": {
                                        "type": "string",
                                        "description": "Lot number of the vaccine (nullable)"
                                    },
                                    "administrator": {
                                        "type": "string",
                                        "description": "Administrator of the vaccine (nullable)"
                                    },
                                    "next_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Next due date for vaccination (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the vaccination (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "vaccinations_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": ""
                                    },
                                    "vaccine_name": {
                                        "type": "string",
                                        "description": "Name of the vaccine"
                                    },
                                    "vaccination_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of vaccination"
                                    },
                                    "lot_number": {
                                        "type": "string",
                                        "description": "Lot number of the vaccine (nullable)"
                                    },
                                    "administrator": {
                                        "type": "string",
                                        "description": "Administrator of the vaccine (nullable)"
                                    },
                                    "next_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Next due date for vaccination (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the vaccination (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vaccinations": {
            "get": {
                "operationId": "anatomous_mvp/vaccinations|GET",
                "summary": "Query all vaccinations records",
                "description": "Query all vaccinations records\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "vaccinations"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": ""
                                                    },
                                                    "created_at": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "",
                                                        "default": "now"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "description": "Reference to the associated user"
                                                    },
                                                    "vaccine_name": {
                                                        "type": "string",
                                                        "description": "Name of the vaccine"
                                                    },
                                                    "vaccination_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Date of vaccination"
                                                    },
                                                    "lot_number": {
                                                        "type": "string",
                                                        "description": "Lot number of the vaccine (nullable)"
                                                    },
                                                    "administrator": {
                                                        "type": "string",
                                                        "description": "Administrator of the vaccine (nullable)"
                                                    },
                                                    "next_due_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "Next due date for vaccination (nullable)"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "description": "Additional notes about the vaccination (nullable)"
                                                    },
                                                    "last_updated": {
                                                        "type": "number",
                                                        "format": "timestamptz",
                                                        "description": "Timestamp of the last update to the record"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                }
            },
            "post": {
                "operationId": "anatomous_mvp/vaccinations|POST",
                "summary": "Add vaccinations record",
                "description": "Add vaccinations record\n\u003Cbr /\u003E\u003Cbr /\u003E\n\u003Cb\u003EAuthentication:\u003C/b\u003E not required",
                "tags": [
                    "vaccinations"
                ],
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": ""
                                                },
                                                "created_at": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "",
                                                    "default": "now"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "description": "Reference to the associated user"
                                                },
                                                "vaccine_name": {
                                                    "type": "string",
                                                    "description": "Name of the vaccine"
                                                },
                                                "vaccination_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Date of vaccination"
                                                },
                                                "lot_number": {
                                                    "type": "string",
                                                    "description": "Lot number of the vaccine (nullable)"
                                                },
                                                "administrator": {
                                                    "type": "string",
                                                    "description": "Administrator of the vaccine (nullable)"
                                                },
                                                "next_due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Next due date for vaccination (nullable)"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Additional notes about the vaccination (nullable)"
                                                },
                                                "last_updated": {
                                                    "type": "number",
                                                    "format": "timestamptz",
                                                    "description": "Timestamp of the last update to the record"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input Error. Check the request payload for issues."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access denied. Additional privileges are needed access the requested resource."
                    },
                    "404": {
                        "description": "Not Found. The requested resource does not exist."
                    },
                    "429": {
                        "description": "Rate Limited. Too many requests."
                    },
                    "500": {
                        "description": "Unexpected error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "vaccine_name": {
                                        "type": "string",
                                        "description": "Name of the vaccine"
                                    },
                                    "vaccination_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of vaccination"
                                    },
                                    "lot_number": {
                                        "type": "string",
                                        "description": "Lot number of the vaccine (nullable)"
                                    },
                                    "administrator": {
                                        "type": "string",
                                        "description": "Administrator of the vaccine (nullable)"
                                    },
                                    "next_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Next due date for vaccination (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the vaccination (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Reference to the associated user"
                                    },
                                    "vaccine_name": {
                                        "type": "string",
                                        "description": "Name of the vaccine"
                                    },
                                    "vaccination_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of vaccination"
                                    },
                                    "lot_number": {
                                        "type": "string",
                                        "description": "Lot number of the vaccine (nullable)"
                                    },
                                    "administrator": {
                                        "type": "string",
                                        "description": "Administrator of the vaccine (nullable)"
                                    },
                                    "next_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Next due date for vaccination (nullable)"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Additional notes about the vaccination (nullable)"
                                    },
                                    "last_updated": {
                                        "type": "number",
                                        "format": "timestamptz",
                                        "description": "Timestamp of the last update to the record"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}